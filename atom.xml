<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[bd17kaka's blog]]></title>
  <link href="http://zhangdian.github.com/atom.xml" rel="self"/>
  <link href="http://zhangdian.github.com/"/>
  <updated>2012-12-06T15:03:40+08:00</updated>
  <id>http://zhangdian.github.com/</id>
  <author>
    <name><![CDATA[bd17kaka]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[freemind 思维导图制作工具]]></title>
    <link href="http://zhangdian.github.com/blog/2012/12/06/freemind-docs/"/>
    <updated>2012-12-06T14:14:00+08:00</updated>
    <id>http://zhangdian.github.com/blog/2012/12/06/freemind-docs</id>
    <content type="html"><![CDATA[<h3>1. 介绍</h3>

<p>FreeMind是由Java撰写而成的实用的开源思维导图/心智软件，可以用来整理思维，结构化，帮助对整个作业流程的了解。</p>

<h3>2. 工程界面</h3>

<p><img src="https://www.dropbox.com/s/cwdgjk6rijq1nhi/800px-FreeMind-computer-knowledge-080.png"></p>

<h3>3. 生成的图片</h3>

<p><img src="https://www.dropbox.com/s/r4nbzjyipd0yent/JavaScript-string-function.gif"></p>

<h3>4. 相关链接</h3>

<ul>
<li><a href="http://freemind.sourceforge.net/wiki/index.php/Main_Page">freemind wiki</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CTeX]]></title>
    <link href="http://zhangdian.github.com/blog/2012/12/04/ctex/"/>
    <updated>2012-12-04T18:08:00+08:00</updated>
    <id>http://zhangdian.github.com/blog/2012/12/04/ctex</id>
    <content type="html"><![CDATA[<h3>1. tex相关概念</h3>

<h4>1.1 tex</h4>

<p>TEX就是一种优秀的电子排版系统。TEX提供了一套功能强大并且十分灵活的排版语言，它多达900 多条指令，并且TEX 有宏功能，用户可以不断地定义自己适用的新命令来扩展TEX 系统的功能。许多人利用TEX 提供的宏定义功能对TEX 进行了二次开发。</p>

<h4>1.2 什么是latex</h4>

<p>LATEX是当今世界上最流行和使用最为广泛的TEX宏集。它构筑在Plain TEX 的基础之上，并加进了很多的功能以使得使用者可以更为方便的利用TEX 的强大功能。使用LATEX基本上不需要使用者自己设计命令和宏等，因为LATEX已经替你做好了。因此，即使使用者并不是很了解TEX，也可以在短短的时间内生成高质量的文档。对于生成复杂的数学公式，LATEX表现的更为出色。</p>

<h4>1.3 tex和latex的关系</h4>

<p>LATEX是TEX中的一种格式(format)，是建立在TEX基础上的宏语言，也就是说，每一个LATEX命令实际上最后都会被转换解释成几个甚至上百个TEX命令。</p>

<h4>1.4 MiKTEX、fpTEX、teTEX、CTEX的关系</h4>

<p>TEX在不同的硬件和操作系统上有不同的实现版本。这就像C语言，在不同的操作系统中有不同的编译系统，例如Linux下的gcc，Windows下的Visual C++等。有时，一种操作系统里也会有好几种的TEX系统。目前常见的Unix/Linux下的TEX系统是teTEX，Windows下则有MiKTEX和fpTEX。CTEX 指的是CTEX中文套装的简称，是把MiKTEX和一些常用的相关工具，如GSview，WinEdt等包装在一起制作的一个简易安装程序，并对其中的中文支持部分进行了配置，使得安装后马上就可以使用中文。</p>

<h3>2. ctex实践</h3>

<h4>2.1 头部</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>\documentclass[16pt,oneside,a4paper,UTF8]{ctexart}
</span><span class='line'>\usepackage{CJKutf8}
</span><span class='line'>\usepackage[unicode=true]{hyperref}
</span><span class='line'>\usepackage{graphicx}
</span><span class='line'>%\usepackage{makeidx}
</span><span class='line'>\begin{document}
</span><span class='line'>\title{title}
</span><span class='line'>\author{author}
</span><span class='line'>\date{\today}
</span><span class='line'>\maketitle</span></code></pre></td></tr></table></div></figure>


<h4>continue&#8230;</h4>

<h3>3. 参考资料</h3>

<ul>
<li><a href="http://www.ctex.org/TeX">ctex介绍</a></li>
<li><a href="http://www.ctex.org/CTeXFAQ">ctex FAQ PDF文档下载</a></li>
<li><a href="http://bbs.ctex.org/forum.php">ctex论坛</a></li>
<li><a href="http://www.ctex.org/CTeXDownload">ctex下载</a></li>
<li><a href="https://www.dropbox.com/s/xtiqy6g15ixnruk/LaTeX.pdf?m">latex英文文档</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress代码片段分享]]></title>
    <link href="http://zhangdian.github.com/blog/2012/11/29/octopress-sharing-code-snippets/"/>
    <updated>2012-11-29T10:44:00+08:00</updated>
    <id>http://zhangdian.github.com/blog/2012/11/29/octopress-sharing-code-snippets</id>
    <content type="html"><![CDATA[<h3>1.介绍</h3>

<p>octopress文档中提供了很多种的代码分享高亮方法，其中我用的最多的就是两种：</p>

<ul>
<li>Backtick Code Blocks</li>
<li>Include Code Snippets</li>
</ul>


<h3>2. Backtick Code Blocks</h3>

<p>这种方式可以用于代码片段的分享，其格式如下</p>

<pre><code>``` [language] [title] [url] [link text]
code snippet
```
</code></pre>

<p>其中带‘[]’的都是可选项。</p>

<h4>问题:</h4>

<ul>
<li>我把可选项都带上，但是不能正确显示，在后台一直提示“favicon.ico无法找到”。</li>
</ul>


<h3>3. Include Code Snippets</h3>

<p>这种方式可以将文件系统中的任何文件导入到博客的任何位置，并且还提供高亮和代码下载。</p>

<h4>3.1 语法</h4>

<pre><code>{{ "{% include_code [title] [lang:language] path/to/file" }} %}
</code></pre>

<p>其中title是标题；lang是你的代码的语言，可以提供高亮的功能；</p>

<p>文件路径的默认根目录在_config.yml中的变量code_dir中，而其默认值是source/downloads/code，只需要把要include的代码放到这个文件夹里就行了。</p>

<h4>问题：</h4>

<ul>
<li>要想以文本形式显示上述语法文本，需要转义一下，如果直接使用“{% include_code &#8230;&#8230;”这样来显示文本的话，默认会被解析为“Backtick Code Blocks”形式的代码引入，所以需要使用链接1的方式进行转义一下。</li>
</ul>


<h3>参考链接</h3>

<ol>
<li><a href="https://github.com/imathis/octopress/blob/site/source/docs/plugins/include-code/index.markdown">文本形式显示include_code语法</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[个性化octopress设置]]></title>
    <link href="http://zhangdian.github.com/blog/2012/11/29/setup-custom-octopress/"/>
    <updated>2012-11-29T00:08:00+08:00</updated>
    <id>http://zhangdian.github.com/blog/2012/11/29/setup-custom-octopress</id>
    <content type="html"><![CDATA[<h3>1. Octopress个性化设置文件</h3>

<p>主要文件都在source/_includes/文件夹中，其中</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/asides/ #包含侧边栏的项目
</span><span class='line'>/custom/ #包含个性化头部、导航栏，footer以及侧边栏等</span></code></pre></td></tr></table></div></figure>


<p>/custom中包含的都是个性化的页面，其中也包含</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/asides/ #包含个性化的侧边栏项目
</span><span class='line'>/*.html  #个性化的页面，可以在这里设置自己个性化的页面</span></code></pre></td></tr></table></div></figure>


<p>那么，设置自己个性化的页面，主要修改的是source/<em>incledes/中的内容。
此外，修改了文件内容之后，还需要修改</em>config.yml中的部分内容才能生效，具体见后面的设置。</p>

<!-- more -->


<h3>2. sina相关</h3>

<p>sina的开放平台上提供了很多可以作为插件到octopress中的元素，包括分享按钮、关注按钮等等，见链接：</p>

<ol>
<li><a href="http://open.weibo.com/">sina开放平台</a></li>
<li><a href="http://open.weibo.com/sharebutton">sina分享按钮界面</a></li>
</ol>


<h4>2.1 sina分享</h4>

<p>要想在边框栏设置sina分享，要修改三个地方的内容：</p>

<ul>
<li>添加文件/source/_includes/custom/asides/sina_weibo_sharing.html文件，其中内容如下：
{% include_code ruby sina_weibo_sharing.html %}</li>
<li>修改_config.yml，在最后添加下面的代码：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Weibo 
</span><span class='line'>weibo_uid: 1930318973
</span><span class='line'>weibo_fansline: 0   # How many lines for the fan list
</span><span class='line'>weibo_show: true    # Whether you want your weibo content to be shown
</span><span class='line'>weibo_pic: true     # Whether you want the pictures in weibo to be shown
</span><span class='line'>weibo_skin: 10      # Please refer to http://weibo.com/tool/weiboshow
</span><span class='line'>weibo_share: true   # Whether show the sharing button</span></code></pre></td></tr></table></div></figure>


<ul>
<li>修改_config.yml，在defaule_asides数组中添加一项：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>custom/asides/sina_weibo_sharing.html</span></code></pre></td></tr></table></div></figure>


<h4>2.2 sina关注</h4>

<p>要想在边框栏设置sina关注，要修改两个地方的内容：</p>

<ul>
<li>添加文件/source/_includes/custom/asides/sina_weibo_follow.html文件，其中内容如下：
{% include_code sina_weibo_follow.html %}</li>
<li>修改_config.yml，在defaule_asides数组中添加一项：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>custom/asides/sina_weibo_follow.html</span></code></pre></td></tr></table></div></figure>


<h4>2.3 将新浪分享添加到每个博客页面下方</h4>

<p>在_include/post/sharing.html添加如下代码即可：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{% if site.weibo_share %}
</span><span class='line'>&lt;script type="text/javascript" charset="utf-8"&gt;
</span><span class='line'>(function(){
</span><span class='line'>  var _w = 72 , _h = 16;
</span><span class='line'>  var param = {
</span><span class='line'>    url:'{{ site.url }}{{ page.url }}',
</span><span class='line'>    type:'3',
</span><span class='line'>    count:'1', /**是否显示分享数，1显示(可选)*/
</span><span class='line'>    appkey:'', /**您申请的应用appkey,显示分享来源(可选)*/
</span><span class='line'>    title:'', /**分享的文字内容(可选，默认为所在页面的title)*/
</span><span class='line'>    pic:'', /**分享图片的路径(可选)*/
</span><span class='line'>    ralateUid:'', /**关联用户的UID，分享微博会@该用户(可选)*/
</span><span class='line'>  language:'zh_cn', /**设置语言，zh_cn|zh_tw(可选)*/
</span><span class='line'>    rnd:new Date().valueOf()
</span><span class='line'>  }
</span><span class='line'>  var temp = [];
</span><span class='line'>  for( var p in param ){
</span><span class='line'>    temp.push(p + '=' + encodeURIComponent( param[p] || '' ) )
</span><span class='line'>  }
</span><span class='line'>  document.write('&lt;iframe allowTransparency="true" frameborder="0" scrolling="no" src="http://hits.sinajs.cn/A1/weiboshare.html?' + temp.join('&') + '" width="'+ _w+'" height="'+_h+'"&gt;&lt;/iframe&gt;')
</span><span class='line'>})()
</span><span class='line'>&lt;/script&gt;
</span><span class='line'>  {% endif %}</span></code></pre></td></tr></table></div></figure>


<h3>3. About.html</h3>

<p>可以添加关于自己的介绍页面，同样，需要修改两个地方的数据：</p>

<ul>
<li>添加文件/source/_includes/custom/asides/about.html的内容</li>
<li>修改_config.yml，在defaule_asides数组中添加一项：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>custom/asides/about.html</span></code></pre></td></tr></table></div></figure>


<h3>4. 添加评论</h3>

<p>Octopress使用的是<a href="http://www.disqus.com/">disqus</a>插件来展示文章的评论。</p>

<h4>4.1 disqus</h4>

<p>在<a href="http://www.disqus.com/">disqus官网</a>注册一个账号，然后按提示设置shortname，Website name以及Website URL即可。这里的Website必须填写你要使用该插件的网址，也就是你的blog地址，对于我则是http://zhangdian.github.com。这里的shortname是要在octopress设置中填写的值。</p>

<h4>4.2 octopress配置</h4>

<p>需要再_config.yml中填写disqus_short_name的值，也就是在注册disqus时的shortname的值，那么这行设置最后的形式就是“disqus_short_name: value”。注意，冒号后面一定要有一个空格，不然会报错。</p>

<h4>4.3 文章设置</h4>

<p>在文章头部，有一个选项是“comments”，把他设置成true。</p>

<h4>4.4 使用到的文件</h4>

<p>在octopress结构中，实际上是在source/_includes/after_footer.html中引入了评论页面：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{{ "{% include disqus.html" }} %}
</span><span class='line'>{{ "{% include facebook_like.html" }} %}
</span><span class='line'>{{ "{% include google_plus_one.html" }} %}
</span><span class='line'>{{ "{% include twitter_sharing.html" }} %}
</span><span class='line'>{{ "{% include custom/after_footer.html" }} %}
</span></code></pre></td></tr></table></div></figure>


<p>其中第一个就是。后面三个分别是facebook、google+、twitter的一些东西，最后一项是引入个性化的设置。在disqus.html中：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{{ "{% if site.disqus_short_name and page.comments != false" }} %}
</span><span class='line'>&lt;script type="text/javascript"&gt;
</span><span class='line'>      var disqus_shortname = '{{ site.disqus_short_name }}';
</span><span class='line'>      {% if page.comments == true %}
</span><span class='line'>        {% comment %} `page.comments` can be only be set to true on pages/posts, so we embed the comments here. {% endcomment %}
</span><span class='line'>        // var disqus_developer = 1;
</span><span class='line'>        var disqus_identifier = '{{ site.url }}{{ page.url }}';
</span><span class='line'>        var disqus_url = '{{ site.url }}{{ page.url }}';
</span><span class='line'>        var disqus_script = 'embed.js';
</span><span class='line'>      {% else %}
</span><span class='line'>        {% comment %} As `page.comments` is empty, we must be on the index page. {% endcomment %}
</span><span class='line'>        var disqus_script = 'count.js';
</span><span class='line'>      {% endif %}
</span><span class='line'>    (function () {
</span><span class='line'>      var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
</span><span class='line'>      dsq.src = 'http://' + disqus_shortname + '.disqus.com/' + disqus_script;
</span><span class='line'>      (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
</span><span class='line'>    }());
</span><span class='line'>&lt;/script&gt;
</span><span class='line'>{% endif %}</span></code></pre></td></tr></table></div></figure>


<p>只有在全局变量disqus_short_name和页面变量comments同时为true的时候，才会加载评论页面。</p>

<h4>4.5 关于source/_includes/post/sharing.html页面</h4>

<p>这个页面里面包含的内容紧跟着文章内容下面显示，而我们上述讨论的评论页面是在这下面显示的。</p>

<h3>5. 遇到的问题</h3>

<h4>5.1 undefined method `Py_IsInitialized&#8217; for RubyPython::Python:Module</h4>

<p>在使用插件功能给博客添加边框栏项目的时候，提示上述错误，原因是没有安装python，解决办法是首先安装python，然后bundle update更新一下，就ok了。参考网站：</p>

<ol>
<li><a href="https://github.com/github/gollum/issues/225">Py_IsInitialized error</a></li>
<li><a href="https://github.com/imathis/octopress/issues/262">Exception on generate codeblock with &#8220;lang:&#8221; on Windows</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git配置]]></title>
    <link href="http://zhangdian.github.com/blog/2012/11/27/git-config/"/>
    <updated>2012-11-27T19:08:00+08:00</updated>
    <id>http://zhangdian.github.com/blog/2012/11/27/git-config</id>
    <content type="html"><![CDATA[<p>使用git进行版本管理，经常需要敲各种命令，比如</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git checkout
</span><span class='line'>git status
</span><span class='line'>git commit
</span><span class='line'>git branch</span></code></pre></td></tr></table></div></figure>


<p>等等，可以在git中进行全局配置，让这些命令更加短一些：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git config --global alias.co chekcout
</span><span class='line'>git config --global alias.st status
</span><span class='line'>git config --global alias.ci commit
</span><span class='line'>git config --global alias.br branch</span></code></pre></td></tr></table></div></figure>


<p>这样，以后就可以敲比较短的命令了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dropbox的安装(Ubuntu12.04)]]></title>
    <link href="http://zhangdian.github.com/blog/2012/11/23/setup-dropbox-on-ubuntu/"/>
    <updated>2012-11-23T16:19:00+08:00</updated>
    <id>http://zhangdian.github.com/blog/2012/11/23/setup-dropbox-on-ubuntu</id>
    <content type="html"><![CDATA[<p>Dropbox是一款资料同步软件，只要把资料存在云端，就可以无处不在的访问到这些资料。今天在Ubuntu12.04下安装了Dropbox，把安装过程和遇到的问题写下来。</p>

<!--more-->


<h3>1. 安装过程</h3>

<p>访问<a href="https://www.dropbox.com/install?os=linux">Dropbox for Linux</a>，可以下载deb文件，也可以下载源码编译安装，也可以从命令行安装。我选择从命令行安装。</p>

<p>根据系统版本的不同，输入不同的命令进行安装就行：</p>

<pre><code># 32位
cd ~ &amp;&amp; wget -O - "https://www.dropbox.com/download?plat=lnx.x86" | tar xzf - 
# 64位
cd ~ &amp;&amp; wget -O - "https://www.dropbox.com/download?plat=lnx.x86_64" | tar xzf -
</code></pre>

<p>安装完之后，运行</p>

<pre><code>~/.dropbox-dist/dropboxd
</code></pre>

<p>就可以运行dropbox了。</p>

<h3>2. 自动启动Dropbox</h3>

<p>在/etc/init.d/文件夹中添加一个文件auto_dropbox.sh，添加以下代码：</p>

<pre><code>~/.dropbox-dist/dropboxd &amp;
</code></pre>

<p>保存退出到shell，输入以下命令：</p>

<pre><code>sudo chmod +x /etc/init.d/auto_dropbox.sh # 设置script的执行权限
sudo update-rc.d auto_dropbox.sh defaults # 设置script在系统启动时执行
</code></pre>

<p>这样，就可以在系统启动的时候自动启动dropbox，可以使用命令：</p>

<pre><code>dropbox status
</code></pre>

<p>来查询dropbox的状态。但是，每次启动都不能自动运行，不知道为什么。还是在启动之后，运行命令在后台运行吧。</p>

<h3>3. 相关链接</h3>

<ul>
<li><a href="https://www.dropbox.com/install?os=linux">dropbox for linux download</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用git操作Octopress]]></title>
    <link href="http://zhangdian.github.com/blog/2012/11/21/git-operation-with-octopress/"/>
    <updated>2012-11-21T15:34:00+08:00</updated>
    <id>http://zhangdian.github.com/blog/2012/11/21/git-operation-with-octopress</id>
    <content type="html"><![CDATA[<h2>1. 建立dev分支</h2>

<p>默认情况下，octopress在本地只有一个source分支。我另外建立一个dev分支，开始的时候，设置dev分支和source分支一致，在source分支，执行命令(1)就可以新建一个和source内容一样的分支，并且自动checkout到dev分支；</p>

<pre><code>git checkout source -b dev (1)
</code></pre>

<!--more-->


<h2>2. 编辑文件，commit</h2>

<p>以后在编辑博客的时候，在dev分支编辑，编辑完之后在source文件夹中，执行命令(2)就可以将该表提交；</p>

<pre><code>git add *
git commit -m'msg' (2)
</code></pre>

<h2>3. 合并代码，push</h2>

<p>然后切换到source分支，pull远程的代码下来，然后merge dev分支的代码，然后将source的代码push上去就完成代码的更新了；</p>

<pre><code>git checkout source
git pull origin source
git merge dev
git push origin source
</code></pre>

<h2>4. 生成、部署</h2>

<p>最后生成，部署新的博客内容就ok了；</p>

<pre><code>rake generate
rake deploy
</code></pre>

<p>此外，以后每次编辑博客之前，最好首先将远程的代码pull下来，然后编辑，编辑完之后最后马上push，这样可以防止冲突的产生。</p>

<h2>5. 参考</h2>

<ul>
<li><a href="http://note.softrayn.com/blog/2012/07/two-pc-sync-octopress/">两台计算机同步octopress</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress安装与配置（Ubuntu12.04）]]></title>
    <link href="http://zhangdian.github.com/blog/2012/11/21/setup-octopress-on-ubuntu/"/>
    <updated>2012-11-21T14:06:00+08:00</updated>
    <id>http://zhangdian.github.com/blog/2012/11/21/setup-octopress-on-ubuntu</id>
    <content type="html"><![CDATA[<p>之前安装了在Windows7下面安装了Octopress，现在也把在Ubuntu12.04下安装过程中遇到的问题记录一下。</p>

<!--more-->


<h1>1. 环境搭建</h1>

<h2>1.1 安装git</h2>

<pre><code>apt-get install git
</code></pre>

<h2>1.2安装ruby</h2>

<h3>1.2.2 安装RVM</h3>

<p>RVM(Ruby Version Manager)管理ruby环境的安装，而octopress需要ruby1.9.3。使用如下命令就能安装rvm：</p>

<pre><code>curl -L https://get.rvm.io | bash -s stable --ruby
</code></pre>

<h3>1.2.1 安装ruby依赖</h3>

<p>直接安装RVM会失败，在此之前要安装ruby的依赖包，使用如下命令安装ruby依赖：</p>

<pre><code>apt-get install build-essential bison openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-0 libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev automake
</code></pre>

<p>如果rvm安装失败的情况下，最后彻底清除rvm环境，然后安装依赖，然后安装rvm，使用如下的代码应该可以彻底清除rvm环境：</p>

<pre><code>sudo apt-get --purge remove ruby-rvm
sudo rm -rf /usr/share/ruby-rvm /etc/rvmrc /etc/profile.d/rvm.sh
</code></pre>

<p>然后使用如下命令查询rvm，确认没有输出，可以尝试打开新的窗户来查询。</p>

<pre><code>env | grep rvm
</code></pre>

<p><em>注：每次使用rvm之前好像要source一下~/.rvm中的一个script才能正常工作。</em></p>

<h3>1.2.3 安装ruby</h3>

<p>使用如下命令安装ruby就行：</p>

<pre><code>rvm install 1.9.3
rvm use 1.9.3
rvm rubygems latest
</code></pre>

<h1>2. 安装Octopress</h1>

<p>使用如下命令就可以把octopress clone下来了：</p>

<pre><code>git clone git://github.com/imathis/octopress.git octopress
</code></pre>

<p>然后安装依赖：</p>

<pre><code>gem install bundler
rbenv rehash    # If you use rbenv, rehash to be able to run the bundle command
bundle install
</code></pre>

<p>最后执行命令安装默认主题：</p>

<pre><code>rake install
</code></pre>

<h1>3. 其他</h1>

<ul>
<li>其他项目比如博客设置，编写博客和在windows下面是一样的了；</li>
<li>在windows下面是使用MarkdownPad来编辑的，在Ubuntu下可以使用retext来编辑；</li>
</ul>


<h1>4. 参考链接</h1>

<ul>
<li><a href="http://stackoverflow.com/questions/9056008/installed-ruby-1-9-3-with-rvm-but-command-line-doesnt-show-ruby-v/9056395#9056395">Installed Ruby 1.9.3 with RVM but command line doesn&#8217;t show ruby -v</a></li>
<li><a href="https://help.github.com/articles/generating-ssh-keys">Generating SSH Keys</a></li>
<li><a href="http://413486774.iteye.com/blog/1166431">RVM “ERROR: Loading command: install (LoadError) > no such file to load — zlib”</a></li>
<li><a href="http://octopress.org/docs/setup/">Octopress Setup</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress的安装与配置(Windows 7)]]></title>
    <link href="http://zhangdian.github.com/blog/2012/11/20/setup-octopress/"/>
    <updated>2012-11-20T16:15:00+08:00</updated>
    <id>http://zhangdian.github.com/blog/2012/11/20/setup-octopress</id>
    <content type="html"><![CDATA[<h1>1.Octopress安装</h1>

<h2>1.1 环境配置</h2>

<p>我是在windows 7上安装的Octopress，Octopress的安装基本上按照<a href="http://octopress.org/docs/setup/">Octopress安装文档</a>安装就行。我遇到的问题主要有以下几点：</p>

<ul>
<li>ruby的版本问题，Octopress必须要ruby1.9.3，如果版本不对的话，文档中提供了rbenv和rvm两种方法来安装合适的版本。我直接使用<a href="http://www.douban.com/group/topic/29077892/">http://www.douban.com/group/topic/29077892/</a>中讲到的办法，也就是直接安装Ruby Installer和development kit就行了，在ruby的官网上下载就行</li>
<li>另外在执行rake的命令的时候，提示Octopress需要0.9.2.2版本，但是我的版本是10.0.1，最后查到可以在前面加上“bundle exec”，就可以通过执行</li>
</ul>


<!--more-->


<h2>1.2 博客部署</h2>

<pre><code>rake setup_github_pages
rake generate
rake deploy
</code></pre>

<p>当然，这里需要再每个rake签名加上bundle exec。</p>

<h2>1.3 编写博客</h2>

<pre><code>rake new_post["title"]
</code></pre>

<p>使用上述命令添加一个博客页面，具体的信息见<a href="http://octopress.org/docs/blogging/">http://octopress.org/docs/blogging/</a>。生成的博客文件都在“/source/_post/”中。
由于编码的原因，我直接在MINGW32里面编写博客文件后，在部署的时候会出问题，所以我使用了<a href="http://markdownpad.com/">MarkDownPad</a>来编写生成的博客文件，然后再进行部署就不会出编码问题。</p>

<h2>1.4 其他</h2>

<p>这里只是Octopress最基本的功能，还有很多功能有待研究。。。</p>

<h2>1.5 参考资料</h2>

<ul>
<li><a href="http://sinosmond.github.com/blog/2012/03/12/install-and-deploy-octopress-to-github-on-windows7-from-scratch/">在 Windows7 下从头开始安装部署 Octopress</a></li>
</ul>


<h1>2.github博客配置</h1>

<h2>2.1 博客名称</h2>

<p>如果是想使用个人博客的话，可以将reposotory的名称设置为yourname.github.com，这里的yourname必须是你登陆github的用户名，那么最后的博客地址就是yourname.github.com；</p>
]]></content>
  </entry>
  
</feed>
