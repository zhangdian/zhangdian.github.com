<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[bd17kaka's blog]]></title>
  <link href="http://zhangdian.github.com/atom.xml" rel="self"/>
  <link href="http://zhangdian.github.com/"/>
  <updated>2012-11-29T12:15:50+08:00</updated>
  <id>http://zhangdian.github.com/</id>
  <author>
    <name><![CDATA[bd17kaka]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[octopress代码片段分享]]></title>
    <link href="http://zhangdian.github.com/blog/2012/11/29/octopress-sharing-code-snippets/"/>
    <updated>2012-11-29T10:44:00+08:00</updated>
    <id>http://zhangdian.github.com/blog/2012/11/29/octopress-sharing-code-snippets</id>
    <content type="html"><![CDATA[<h3>1.介绍</h3>

<p>octopress文档中提供了很多种的代码分享高亮方法，其中我用的最多的就是两种：</p>

<ul>
<li>Backtick Code Blocks</li>
<li>Include Code Snippets</li>
</ul>


<h3>2. Backtick Code Blocks</h3>

<p>这种方式可以用于代码片段的分享，其格式如下</p>

<pre><code>``` [language] [title] [url] [link text]
code snippet
```
</code></pre>

<p>其中带‘[]’的都是可选项。</p>

<h4>问题:</h4>

<ul>
<li>我把可选项都带上，但是不能正确显示，在后台一直提示“favicon.ico无法找到”。</li>
</ul>


<h3>3. Include Code Snippets</h3>

<p>这种方式可以将文件系统中的任何文件导入到博客的任何位置，并且还提供高亮和代码下载。</p>

<h4>3.1 语法</h4>

<pre><code>```
File e:/octopress/source/downloads/code/path/to/file could not be found
```
</code></pre>

<p>其中title是标题；lang是你的代码的语言，可以提供高亮的功能；</p>

<p>文件路径的默认根目录在_config.yml中的变量code_dir中，而其默认值是source/downloads/code，只需要把要include的代码放到这个文件夹里就行了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[个性化octopress设置]]></title>
    <link href="http://zhangdian.github.com/blog/2012/11/29/setup-custom-octopress/"/>
    <updated>2012-11-29T00:08:00+08:00</updated>
    <id>http://zhangdian.github.com/blog/2012/11/29/setup-custom-octopress</id>
    <content type="html"><![CDATA[<h3>1. Octopress个性化设置文件</h3>

<p>主要文件都在source/_includes/文件夹中，其中</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/asides/ #包含侧边栏的项目
</span><span class='line'>/custom/ #包含个性化头部、导航栏，footer以及侧边栏等</span></code></pre></td></tr></table></div></figure>


<p>/custom中包含的都是个性化的页面，其中也包含</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/asides/ #包含个性化的侧边栏项目
</span><span class='line'>/*.html  #个性化的页面，可以在这里设置自己个性化的页面</span></code></pre></td></tr></table></div></figure>


<p>那么，设置自己个性化的页面，主要修改的是source/<em>incledes/中的内容。
此外，修改了文件内容之后，还需要修改</em>config.yml中的部分内容才能生效，具体见后面的设置。</p>

<!-- more -->


<h3>2. sina相关</h3>

<h4>2.1 sina分享</h4>

<p>要想在边框栏设置sina分享，要修改三个地方的内容：</p>

<ul>
<li>添加文件/source/_includes/custom/asides/sina_weibo_sharing.html文件，其中内容如下：</li>
</ul>


<figure class='code'><figcaption><span>ruby (sina_weibo_sharing.html)</span> <a href='http://zhangdian.github.com/downloads/code/sina_weibo_sharing.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% if site.weibo_share %}
</span><span class='line'>  <span class="nt">&lt;span&gt;</span>
</span><span class='line'>  <span class="nt">&lt;iframe</span>
</span><span class='line'>    <span class="na">width=</span><span class="s">&quot;86&quot;</span>
</span><span class='line'>    <span class="na">scrolling=</span><span class="s">&quot;no&quot;</span>
</span><span class='line'>    <span class="na">height=</span><span class="s">&quot;16&quot;</span>
</span><span class='line'>    <span class="na">frameborder=</span><span class="s">&quot;0&quot;</span>
</span><span class='line'>    <span class="na">src=</span>
</span><span class='line'>      &quot;http://hits.sinajs.cn/A1/weiboshare.html?url={{ site.url }}{{ page.url }}<span class="ni">&amp;amp;</span>type=6<span class="ni">&amp;amp;</span>{% if site.weibo_uid %}ralateUid={{ site.weibo_uid }}<span class="ni">&amp;amp;</span>{% endif %}language=zh_cn&quot; allowtransparency=&quot;true&quot;&gt;
</span><span class='line'>  <span class="nt">&lt;/iframe&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/span&gt;</span>
</span><span class='line'>{% endif %}
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>修改_config.yml，在最后添加下面的代码：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Weibo 
</span><span class='line'>weibo_uid: 1930318973
</span><span class='line'>weibo_fansline: 0   # How many lines for the fan list
</span><span class='line'>weibo_show: true    # Whether you want your weibo content to be shown
</span><span class='line'>weibo_pic: true     # Whether you want the pictures in weibo to be shown
</span><span class='line'>weibo_skin: 10      # Please refer to http://weibo.com/tool/weiboshow
</span><span class='line'>weibo_share: true   # Whether show the sharing button</span></code></pre></td></tr></table></div></figure>


<ul>
<li>修改_config.yml，在defaule_asides数组中添加一项：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>custom/asides/sina_weibo_sharing.html</span></code></pre></td></tr></table></div></figure>


<h4>2.2 sina关注</h4>

<p>要想在边框栏设置sina关注，要修改两个地方的内容：</p>

<ul>
<li>添加文件/source/_includes/custom/asides/sina_weibo_follow.html文件，其中内容如下：</li>
</ul>


<figure class='code'><figcaption><span> (sina_weibo_follow.html)</span> <a href='http://zhangdian.github.com/downloads/code/sina_weibo_follow.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html</span> <span class="na">xmlns:wb=</span><span class="s">“http://open.weibo.com/wb”</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;http://tjs.sjs.sinajs.cn/open/api/js/wb.js&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">charset=</span><span class="s">&quot;utf-8&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'><span class="nt">&lt;wb:follow</span><span class="na">-button</span> <span class="na">uid=</span><span class="s">&quot;1930318973&quot;</span> <span class="na">type=</span><span class="s">&quot;red_4&quot;</span> <span class="na">width=</span><span class="s">&quot;100%&quot;</span> <span class="na">height=</span><span class="s">&quot;64&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'><span class="err">&lt;</span>/wb:follow-button&gt;
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>修改_config.yml，在defaule_asides数组中添加一项：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>custom/asides/sina_weibo_follow.html</span></code></pre></td></tr></table></div></figure>


<h3>3. About.html</h3>

<p>可以添加关于自己的介绍页面，同样，需要修改两个地方的数据：</p>

<ul>
<li>添加文件/source/_includes/custom/asides/about.html的内容</li>
<li>修改_config.yml，在defaule_asides数组中添加一项：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>custom/asides/about.html</span></code></pre></td></tr></table></div></figure>


<h3>4. 遇到的问题</h3>

<ul>
<li>无法正确显示以显示文件形式的code；解决办法是首先安装python，然后bundle update；</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git配置]]></title>
    <link href="http://zhangdian.github.com/blog/2012/11/27/git-config/"/>
    <updated>2012-11-27T19:08:00+08:00</updated>
    <id>http://zhangdian.github.com/blog/2012/11/27/git-config</id>
    <content type="html"><![CDATA[<p>使用git进行版本管理，经常需要敲各种命令，比如</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git checkout
</span><span class='line'>git status
</span><span class='line'>git commit
</span><span class='line'>git branch</span></code></pre></td></tr></table></div></figure>


<p>等等，可以在git中进行全局配置，让这些命令更加短一些：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git config --global alias.co chekcout
</span><span class='line'>git config --global alias.st status
</span><span class='line'>git config --global alias.ci commit
</span><span class='line'>git config --global alias.br branch</span></code></pre></td></tr></table></div></figure>


<p>这样，以后就可以敲比较短的命令了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dropbox的安装(Ubuntu12.04)]]></title>
    <link href="http://zhangdian.github.com/blog/2012/11/23/setup-dropbox-on-ubuntu/"/>
    <updated>2012-11-23T16:19:00+08:00</updated>
    <id>http://zhangdian.github.com/blog/2012/11/23/setup-dropbox-on-ubuntu</id>
    <content type="html"><![CDATA[<p>Dropbox是一款资料同步软件，只要把资料存在云端，就可以无处不在的访问到这些资料。今天在Ubuntu12.04下安装了Dropbox，把安装过程和遇到的问题写下来。</p>

<!--more-->


<h3>1. 安装过程</h3>

<p>访问<a href="https://www.dropbox.com/install?os=linux">Dropbox for Linux</a>，可以下载deb文件，也可以下载源码编译安装，也可以从命令行安装。我选择从命令行安装。</p>

<p>根据系统版本的不同，输入不同的命令进行安装就行：</p>

<pre><code># 32位
cd ~ &amp;&amp; wget -O - "https://www.dropbox.com/download?plat=lnx.x86" | tar xzf - 
# 64位
cd ~ &amp;&amp; wget -O - "https://www.dropbox.com/download?plat=lnx.x86_64" | tar xzf -
</code></pre>

<p>安装完之后，运行</p>

<pre><code>~/.dropbox-dist/dropboxd
</code></pre>

<p>就可以运行dropbox了。</p>

<h3>2. 自动启动Dropbox</h3>

<p>在/etc/init.d/文件夹中添加一个文件auto_dropbox.sh，添加以下代码：</p>

<pre><code>~/.dropbox-dist/dropboxd &amp;
</code></pre>

<p>保存退出到shell，输入以下命令：</p>

<pre><code>sudo chmod +x /etc/init.d/auto_dropbox.sh # 设置script的执行权限
sudo update-rc.d auto_dropbox.sh defaults # 设置script在系统启动时执行
</code></pre>

<p>这样，就可以在系统启动的时候自动启动dropbox，可以使用命令：</p>

<pre><code>dropbox status
</code></pre>

<p>来查询dropbox的状态。但是，每次启动都不能自动运行，不知道为什么。还是在启动之后，运行命令在后台运行吧。</p>

<h3>3. 相关链接</h3>

<ul>
<li><a href="https://www.dropbox.com/install?os=linux">dropbox for linux download</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用git操作Octopress]]></title>
    <link href="http://zhangdian.github.com/blog/2012/11/21/git-operation-with-octopress/"/>
    <updated>2012-11-21T15:34:00+08:00</updated>
    <id>http://zhangdian.github.com/blog/2012/11/21/git-operation-with-octopress</id>
    <content type="html"><![CDATA[<h2>1. 建立dev分支</h2>

<p>默认情况下，octopress在本地只有一个source分支。我另外建立一个dev分支，开始的时候，设置dev分支和source分支一致，在source分支，执行命令(1)就可以新建一个和source内容一样的分支，并且自动checkout到dev分支；</p>

<pre><code>git checkout source -b dev (1)
</code></pre>

<!--more-->


<h2>2. 编辑文件，commit</h2>

<p>以后在编辑博客的时候，在dev分支编辑，编辑完之后在source文件夹中，执行命令(2)就可以将该表提交；</p>

<pre><code>git add *
git commit -m'msg' (2)
</code></pre>

<h2>3. 合并代码，push</h2>

<p>然后切换到source分支，pull远程的代码下来，然后merge dev分支的代码，然后将source的代码push上去就完成代码的更新了；</p>

<pre><code>git checkout source
git pull origin source
git merge dev
git push origin source
</code></pre>

<h2>4. 生成、部署</h2>

<p>最后生成，部署新的博客内容就ok了；</p>

<pre><code>rake generate
rake deploy
</code></pre>

<p>此外，以后每次编辑博客之前，最好首先将远程的代码pull下来，然后编辑，编辑完之后最后马上push，这样可以防止冲突的产生。</p>

<h2>5. 参考</h2>

<ul>
<li><a href="http://note.softrayn.com/blog/2012/07/two-pc-sync-octopress/">两台计算机同步octopress</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress安装与配置（Ubuntu12.04）]]></title>
    <link href="http://zhangdian.github.com/blog/2012/11/21/setup-octopress-on-ubuntu/"/>
    <updated>2012-11-21T14:06:00+08:00</updated>
    <id>http://zhangdian.github.com/blog/2012/11/21/setup-octopress-on-ubuntu</id>
    <content type="html"><![CDATA[<p>之前安装了在Windows7下面安装了Octopress，现在也把在Ubuntu12.04下安装过程中遇到的问题记录一下。</p>

<!--more-->


<h1>1. 环境搭建</h1>

<h2>1.1 安装git</h2>

<pre><code>apt-get install git
</code></pre>

<h2>1.2安装ruby</h2>

<h3>1.2.2 安装RVM</h3>

<p>RVM(Ruby Version Manager)管理ruby环境的安装，而octopress需要ruby1.9.3。使用如下命令就能安装rvm：</p>

<pre><code>curl -L https://get.rvm.io | bash -s stable --ruby
</code></pre>

<h3>1.2.1 安装ruby依赖</h3>

<p>直接安装RVM会失败，在此之前要安装ruby的依赖包，使用如下命令安装ruby依赖：</p>

<pre><code>apt-get install build-essential bison openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-0 libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev automake
</code></pre>

<p>如果rvm安装失败的情况下，最后彻底清除rvm环境，然后安装依赖，然后安装rvm，使用如下的代码应该可以彻底清除rvm环境：</p>

<pre><code>sudo apt-get --purge remove ruby-rvm
sudo rm -rf /usr/share/ruby-rvm /etc/rvmrc /etc/profile.d/rvm.sh
</code></pre>

<p>然后使用如下命令查询rvm，确认没有输出，可以尝试打开新的窗户来查询。</p>

<pre><code>env | grep rvm
</code></pre>

<p><em>注：每次使用rvm之前好像要source一下~/.rvm中的一个script才能正常工作。</em></p>

<h3>1.2.3 安装ruby</h3>

<p>使用如下命令安装ruby就行：</p>

<pre><code>rvm install 1.9.3
rvm use 1.9.3
rvm rubygems latest
</code></pre>

<h1>2. 安装Octopress</h1>

<p>使用如下命令就可以把octopress clone下来了：</p>

<pre><code>git clone git://github.com/imathis/octopress.git octopress
</code></pre>

<p>然后安装依赖：</p>

<pre><code>gem install bundler
rbenv rehash    # If you use rbenv, rehash to be able to run the bundle command
bundle install
</code></pre>

<p>最后执行命令安装默认主题：</p>

<pre><code>rake install
</code></pre>

<h1>3. 其他</h1>

<ul>
<li>其他项目比如博客设置，编写博客和在windows下面是一样的了；</li>
<li>在windows下面是使用MarkdownPad来编辑的，在Ubuntu下可以使用retext来编辑；</li>
</ul>


<h1>4. 参考链接</h1>

<ul>
<li><a href="http://stackoverflow.com/questions/9056008/installed-ruby-1-9-3-with-rvm-but-command-line-doesnt-show-ruby-v/9056395#9056395">Installed Ruby 1.9.3 with RVM but command line doesn&#8217;t show ruby -v</a></li>
<li><a href="https://help.github.com/articles/generating-ssh-keys">Generating SSH Keys</a></li>
<li><a href="http://413486774.iteye.com/blog/1166431">RVM “ERROR: Loading command: install (LoadError) > no such file to load — zlib”</a></li>
<li><a href="http://octopress.org/docs/setup/">Octopress Setup</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress的安装与配置(Windows 7)]]></title>
    <link href="http://zhangdian.github.com/blog/2012/11/20/setup-octopress/"/>
    <updated>2012-11-20T16:15:00+08:00</updated>
    <id>http://zhangdian.github.com/blog/2012/11/20/setup-octopress</id>
    <content type="html"><![CDATA[<h1>1.Octopress安装</h1>

<h2>1.1 环境配置</h2>

<p>我是在windows 7上安装的Octopress，Octopress的安装基本上按照<a href="http://octopress.org/docs/setup/">Octopress安装文档</a>安装就行。我遇到的问题主要有以下几点：</p>

<ul>
<li>ruby的版本问题，Octopress必须要ruby1.9.3，如果版本不对的话，文档中提供了rbenv和rvm两种方法来安装合适的版本。我直接使用<a href="http://www.douban.com/group/topic/29077892/">http://www.douban.com/group/topic/29077892/</a>中讲到的办法，也就是直接安装Ruby Installer和development kit就行了，在ruby的官网上下载就行</li>
<li>另外在执行rake的命令的时候，提示Octopress需要0.9.2.2版本，但是我的版本是10.0.1，最后查到可以在前面加上“bundle exec”，就可以通过执行</li>
</ul>


<!--more-->


<h2>1.2 博客部署</h2>

<pre><code>rake setup_github_pages
rake generate
rake deploy
</code></pre>

<p>当然，这里需要再每个rake签名加上bundle exec。</p>

<h2>1.3 编写博客</h2>

<pre><code>rake new_post["title"]
</code></pre>

<p>使用上述命令添加一个博客页面，具体的信息见<a href="http://octopress.org/docs/blogging/">http://octopress.org/docs/blogging/</a>。生成的博客文件都在“/source/_post/”中。
由于编码的原因，我直接在MINGW32里面编写博客文件后，在部署的时候会出问题，所以我使用了<a href="http://markdownpad.com/">MarkDownPad</a>来编写生成的博客文件，然后再进行部署就不会出编码问题。</p>

<h2>1.4 其他</h2>

<p>这里只是Octopress最基本的功能，还有很多功能有待研究。。。</p>

<h2>1.5 参考资料</h2>

<ul>
<li><a href="http://sinosmond.github.com/blog/2012/03/12/install-and-deploy-octopress-to-github-on-windows7-from-scratch/">在 Windows7 下从头开始安装部署 Octopress</a></li>
</ul>


<h1>2.github博客配置</h1>

<h2>2.1 博客名称</h2>

<p>如果是想使用个人博客的话，可以将reposotory的名称设置为yourname.github.com，这里的yourname必须是你登陆github的用户名，那么最后的博客地址就是yourname.github.com；</p>
]]></content>
  </entry>
  
</feed>
